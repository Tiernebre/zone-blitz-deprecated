/*
 * This file is generated by jOOQ.
 */
package com.tiernebre.database.jooq.tables.records;

import com.tiernebre.database.jooq.tables.Registration;
import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;

/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class RegistrationRecord
  extends UpdatableRecordImpl<RegistrationRecord> {

  private static final long serialVersionUID = 1L;

  /**
   * Setter for <code>public.registration.id</code>.
   */
  public void setId(Long value) {
    set(0, value);
  }

  /**
   * Getter for <code>public.registration.id</code>.
   */
  public Long getId() {
    return (Long) get(0);
  }

  /**
   * Setter for <code>public.registration.username</code>.
   */
  public void setUsername(String value) {
    set(1, value);
  }

  /**
   * Getter for <code>public.registration.username</code>.
   */
  public String getUsername() {
    return (String) get(1);
  }

  /**
   * Setter for <code>public.registration.password</code>.
   */
  public void setPassword(String value) {
    set(2, value);
  }

  /**
   * Getter for <code>public.registration.password</code>.
   */
  public String getPassword() {
    return (String) get(2);
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------

  @Override
  public Record1<Long> key() {
    return (Record1) super.key();
  }

  // -------------------------------------------------------------------------
  // Constructors
  // -------------------------------------------------------------------------

  /**
   * Create a detached RegistrationRecord
   */
  public RegistrationRecord() {
    super(Registration.REGISTRATION);
  }

  /**
   * Create a detached, initialised RegistrationRecord
   */
  public RegistrationRecord(Long id, String username, String password) {
    super(Registration.REGISTRATION);
    setId(id);
    setUsername(username);
    setPassword(password);
    resetChangedOnNotNull();
  }
}
