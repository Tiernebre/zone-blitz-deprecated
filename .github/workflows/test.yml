name: Test

on: push

env:
  PORT: 8000
  WEB_SERVER_URL: http://127.0.0.1:8000
  URL: https://dev.zoneblitz.app
  TERM: dumb

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install mkcert
        run: |
          sudo apt install libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert
      - name: Run unit tests in development container
        uses: devcontainers/ci@v0.3
        with:
          runCmd: make test

  web-server-smoke-test:
    name: Web Server Smoke Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Web Server Docker image
        run: docker build -t brendantierney/zone-blitz:latest .
      - name: Run Web Server Docker container
        run: |
          docker run -d -p --name web $PORT:$PORT brendantierney/zone-blitz:latest
          while [ "`docker inspect -f {{.State.Health.Status}} web" != "healthy" ]; do     sleep 2; done
      - name: Verify web server container runs and serves healthy responses
        uses: jtalk/url-health-check-action@v4
        with:
          url: ${{ env.WEB_SERVER_URL }}|${{ env.WEB_SERVER_URL }}/assets/htmx.js|${{ env.WEB_SERVER_URL }}/assets/styles.css
          max-attempts: 1
          retry-delay: 0s

  development-environment-smoke-test:
    name: Development Environment Smoke Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install mkcert
        run: |
          sudo apt install libnss3-tools
          curl -JLO "https://dl.filippo.io/mkcert/latest?for=linux/amd64"
          chmod +x mkcert-v*-linux-amd64
          sudo cp mkcert-v*-linux-amd64 /usr/local/bin/mkcert
      - name: Run initialize command
        run: .devcontainer/initializeCommand.sh
      - name: Create and start development containers
        run: docker-compose -f .devcontainer/docker-compose.devcontainer.yml up -d
      - name: Start web server in its development container
        run: docker-compose -f .devcontainer/docker-compose.devcontainer.yml exec -T -w /workspace web make &
      - name: Verify development container proxy runs and proxies to web server
        uses: jtalk/url-health-check-action@v4
        with:
          url: ${{ env.URL }}
          max-attempts: 12
          retry-delay: 5s
          retry-all: true
